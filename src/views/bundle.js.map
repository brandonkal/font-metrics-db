{"version":3,"sources":["../../node_modules/font-measure/index.js","measure2.js","displayMetrics.js","bundle.js"],"names":["testText","measure2","fontName","fontSize","fontWeight","fontStyle","document","defaultView","getComputedStyle","CanvasRenderingContext2D","prototype","measureTextWidth","measureText","getCSSValue","element","property","getPropertyValue","textstring","metrics","fontFamily","canvas","replace","isSpace","test","leadDiv","createElement","style","position","margin","padding","opacity","innerHTML","body","appendChild","leading","leadDivHeight","removeChild","width","height","ctx","getContext","font","w","h","baseline","fillStyle","fillRect","fillText","pixelData","getImageData","data","i","w4","len","length","ascent","descent","minx","step","maxx","bounds","miny","maxy","getElementById","context","join","clearRect","xHeight","capHeight","xStart","parseInt","offset","Math","ceil","ascender","descender","myMetrics","px","JSON","parse","stringify","relative","fontsize","Array","slice","call","getElementsByTagName","forEach","c","displayMetrics","containerId","logId","setAttribute","logstring","textContent","window","measure"],"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","file":"bundle.js","sourceRoot":"../web","sourcesContent":["'use strict'\r\n\r\nmodule.exports = measure\r\n\r\nmeasure.canvas = document.createElement('canvas')\r\nmeasure.cache = {}\r\n\r\nfunction measure (font, o) {\r\n\tif (!o) o = {}\r\n\r\n\tif (typeof font === 'string' || Array.isArray(font)) {\r\n\t\to.family = font\r\n\t}\r\n\r\n\tvar family = Array.isArray(o.family) ? o.family.join(', ') : o.family\r\n\tif (!family) throw Error('`family` must be defined')\r\n\r\n\tvar fs = o.size || o.fontSize || o.em || 48\r\n\tvar weight = o.weight || o.fontWeight || ''\r\n\tvar style = o.style || o.fontStyle || ''\r\n\tvar font = [style, weight, fs].join(' ') + 'px ' + family\r\n\tvar origin = o.origin || 'top'\r\n\r\n\tif (measure.cache[family]) {\r\n\t\t// return more precise values if cache has them\r\n\t\tif (fs <= measure.cache[family].em) {\r\n\t\t\treturn applyOrigin(measure.cache[family], origin)\r\n\t\t}\r\n\t}\r\n\r\n\tvar canvas = o.canvas || measure.canvas\r\n\tvar ctx = canvas.getContext('2d')\r\n\tvar chars = {\r\n\t\tupper: o.upper !== undefined ? o.upper : 'H',\r\n\t\tlower: o.lower !== undefined ? o.lower : 'x',\r\n\t\tdescent: o.descent !== undefined ? o.descent : 'p',\r\n\t\tascent: o.ascent !== undefined ? o.ascent : 'h',\r\n\t\ttittle: o.tittle !== undefined ? o.tittle : 'i',\r\n\t\tovershoot: o.overshoot !== undefined ? o.overshoot : 'O'\r\n\t}\r\n\tvar l = Math.ceil(fs * 1.5)\r\n\tcanvas.height = l\r\n\tcanvas.width = l * .5\r\n\tctx.font = font\r\n\r\n\tvar char = 'H'\r\n\tvar result = {\r\n\t\ttop: 0\r\n\t}\r\n\r\n\t// measure line-height\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'top'\r\n\tctx.fillStyle = 'black'\r\n\tctx.fillText(char, 0, 0)\r\n\tvar topPx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'bottom'\r\n\tctx.fillText(char, 0, l)\r\n\tvar bottomPx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tresult.lineHeight =\r\n\tresult.bottom = l - bottomPx + topPx\r\n\r\n\t// measure baseline\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'alphabetic'\r\n\tctx.fillText(char, 0, l)\r\n\tvar baselinePx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tvar baseline = l - baselinePx - 1 + topPx\r\n\tresult.baseline =\r\n\tresult.alphabetic = baseline\r\n\r\n\t// measure median\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'middle'\r\n\tctx.fillText(char, 0, l * .5)\r\n\tvar medianPx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tresult.median =\r\n\tresult.middle = l - medianPx - 1 + topPx - l * .5\r\n\r\n\t// measure hanging\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'hanging'\r\n\tctx.fillText(char, 0, l * .5)\r\n\tvar hangingPx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tresult.hanging = l - hangingPx - 1 + topPx - l * .5\r\n\r\n\t// measure ideographic\r\n\tctx.clearRect(0, 0, l, l)\r\n\tctx.textBaseline = 'ideographic'\r\n\tctx.fillText(char, 0, l)\r\n\tvar ideographicPx = firstTop(ctx.getImageData(0, 0, l, l))\r\n\tresult.ideographic = l - ideographicPx - 1 + topPx\r\n\r\n\t// measure cap\r\n\tif (chars.upper) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.upper, 0, 0)\r\n\t\tresult.upper = firstTop(ctx.getImageData(0, 0, l, l))\r\n\t\tresult.capHeight = (result.baseline - result.upper)\r\n\t}\r\n\r\n\t// measure x\r\n\tif (chars.lower) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.lower, 0, 0)\r\n\t\tresult.lower = firstTop(ctx.getImageData(0, 0, l, l))\r\n\t\tresult.xHeight = (result.baseline - result.lower)\r\n\t}\r\n\r\n\t// measure tittle\r\n\tif (chars.tittle) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.tittle, 0, 0)\r\n\t\tresult.tittle = firstTop(ctx.getImageData(0, 0, l, l))\r\n\t}\r\n\r\n\t// measure ascent\r\n\tif (chars.ascent) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.ascent, 0, 0)\r\n\t\tresult.ascent = firstTop(ctx.getImageData(0, 0, l, l))\r\n\t}\r\n\r\n\t// measure descent\r\n\tif (chars.descent) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.descent, 0, 0)\r\n\t\tresult.descent = firstBottom(ctx.getImageData(0, 0, l, l))\r\n\t}\r\n\r\n\t// measure overshoot\r\n\tif (chars.overshoot) {\r\n\t\tctx.clearRect(0, 0, l, l)\r\n\t\tctx.textBaseline = 'top'\r\n\t\tctx.fillText(chars.overshoot, 0, 0)\r\n\t\tvar overshootPx = firstBottom(ctx.getImageData(0, 0, l, l))\r\n\t\tresult.overshoot = overshootPx - baseline\r\n\t}\r\n\r\n\t// normalize result\r\n\tfor (var name in result) {\r\n\t\tresult[name] /= fs\r\n\t}\r\n\r\n\tresult.em = fs\r\n\tmeasure.cache[family] = result\r\n\r\n\treturn applyOrigin(result, origin)\r\n}\r\n\r\nfunction applyOrigin(obj, origin) {\r\n\tvar res = {}\r\n\tif (typeof origin === 'string') origin = obj[origin]\r\n\tfor (var name in obj) {\r\n\t\tif (name === 'em') continue\r\n\t\tres[name] = obj[name] - origin\r\n\t}\r\n\treturn res\r\n}\r\n\r\nfunction firstTop(iData) {\r\n\tvar l = iData.height\r\n\tvar data = iData.data\r\n\tfor (var i = 3; i < data.length; i+=4) {\r\n\t\tif (data[i] !== 0) {\r\n\t\t\treturn Math.floor((i - 3) *.25 / l)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction firstBottom(iData) {\r\n\tvar l = iData.height\r\n\tvar data = iData.data\r\n\tfor (var i = data.length - 1; i > 0; i -= 4) {\r\n\t\tif (data[i] !== 0) {\r\n\t\t\treturn Math.floor((i - 3) *.25 / l)\r\n\t\t}\r\n\t}\r\n}\r\n","var testText = 'Sixty Handgloves ABC'\n\nexport default function measure2(\n  fontName,\n  { fontSize = '200px', fontWeight = 400, fontStyle = 'normal' } = {}\n) {\n  if (typeof fontSize === 'number') {\n    fontSize = fontSize + 'px'\n  }\n  // if there is no getComputedStyle, this library won't work.\n  if (!document.defaultView.getComputedStyle) {\n    throw \"ERROR: 'document.defaultView.getComputedStyle' not found. This library only works in browsers that can report computed CSS values.\"\n  }\n\n  // store the old text metrics function on the Canvas2D prototype\n  CanvasRenderingContext2D.prototype.measureTextWidth =\n    CanvasRenderingContext2D.prototype.measureText\n\n  /**\n   *  shortcut function for getting computed CSS values\n   */\n  var getCSSValue = function(element, property) {\n    return document.defaultView\n      .getComputedStyle(element, null)\n      .getPropertyValue(property)\n  }\n\n  /**\n   * The new text metrics function\n   */\n  CanvasRenderingContext2D.prototype.measureText = function(textstring) {\n    var metrics = this.measureTextWidth(textstring),\n      fontFamily = getCSSValue(this.canvas, 'font-family'),\n      fontSize = getCSSValue(this.canvas, 'font-size').replace('px', ''),\n      isSpace = !/\\S/.test(textstring)\n    metrics.fontSize = fontSize\n\n    // for text lead values, we meaure a multiline text container.\n    var leadDiv = document.createElement('div')\n    leadDiv.style.position = 'absolute'\n    leadDiv.style.margin = 0\n    leadDiv.style.padding = 0\n    leadDiv.style.opacity = 0\n    leadDiv.style.fontSize = fontSize + 'px '\n    leadDiv.style.fontFamily = fontFamily\n    leadDiv.style.fontWeight = fontWeight\n\n    leadDiv.innerHTML = textstring + '<br/>' + textstring\n    document.body.appendChild(leadDiv)\n\n    // make some initial guess at the text leading (using the standard TeX ratio)\n    metrics.leading = 1.2 * fontSize\n\n    // then we try to get the real value from the browser\n    var leadDivHeight = getCSSValue(leadDiv, 'height')\n    leadDivHeight = leadDivHeight.replace('px', '')\n    if (leadDivHeight >= fontSize * 2) {\n      metrics.leading = (leadDivHeight / 2) | 0\n    }\n    document.body.removeChild(leadDiv)\n\n    // if we're not dealing with white space, we can compute metrics\n    if (!isSpace) {\n      // Have characters, so measure the text\n      var canvas = document.createElement('canvas')\n      var padding = 100\n      canvas.width = metrics.width + padding\n      canvas.height = 3 * fontSize\n      canvas.style.opacity = 1\n      canvas.style.fontFamily = fontFamily\n      canvas.style.fontSize = fontSize\n      var ctx = canvas.getContext('2d')\n      ctx.font = fontSize + 'px ' + fontFamily\n\n      var w = canvas.width,\n        h = canvas.height,\n        baseline = h / 2\n\n      // Set all canvas pixeldata values to 255, with all the content\n      // data being 0. This lets us scan for data[i] != 255.\n      ctx.fillStyle = 'white'\n      ctx.fillRect(-1, -1, w + 2, h + 2)\n      ctx.fillStyle = 'black'\n      ctx.fillText(textstring, padding / 2, baseline)\n      var pixelData = ctx.getImageData(0, 0, w, h).data\n\n      // canvas pixel data is w*4 by h*4, because R, G, B and A are separate,\n      // consecutive values in the array, rather than stored as 32 bit ints.\n      var i = 0,\n        w4 = w * 4,\n        len = pixelData.length\n\n      // Finding the ascent uses a normal, forward scanline\n      while (++i < len && pixelData[i] === 255) {}\n      var ascent = (i / w4) | 0\n\n      // Finding the descent uses a reverse scanline\n      i = len - 1\n      while (--i > 0 && pixelData[i] === 255) {}\n      var descent = (i / w4) | 0\n\n      // find the min-x coordinate\n      for (i = 0; i < len && pixelData[i] === 255; ) {\n        i += w4\n        if (i >= len) {\n          i = i - len + 4\n        }\n      }\n      var minx = ((i % w4) / 4) | 0\n\n      // find the max-x coordinate\n      var step = 1\n      for (i = len - 3; i >= 0 && pixelData[i] === 255; ) {\n        i -= w4\n        if (i < 0) {\n          i = len - 3 - step++ * 4\n        }\n      }\n      var maxx = ((i % w4) / 4 + 1) | 0\n\n      // set font metrics\n      metrics.ascent = baseline - ascent\n      metrics.descent = descent - baseline\n      metrics.bounds = {\n        minx: minx - padding / 2,\n        maxx: maxx - padding / 2,\n        miny: 0,\n        maxy: descent - ascent,\n      }\n      metrics.height = 1 + (descent - ascent)\n    }\n\n    // if we ARE dealing with whitespace, most values will just be zero.\n    else {\n      // Only whitespace, so we can't measure the text\n      metrics.ascent = 0\n      metrics.descent = 0\n      metrics.bounds = {\n        minx: 0,\n        maxx: metrics.width, // Best guess\n        miny: 0,\n        maxy: 0,\n      }\n      metrics.height = 0\n    }\n    return metrics\n  }\n\n  var canvas = document.getElementById('cvs'),\n    context = canvas.getContext('2d')\n\n  var w = 220,\n    h = 220\n\n  canvas.style.font = [fontStyle, fontWeight, fontSize, `'${fontName}'`].join(\n    ' '\n  )\n  context.font = [fontStyle, fontWeight, fontSize, fontName].join(' ')\n  context.clearRect(0, 0, canvas.width, canvas.height)\n  // draw bounding box and text\n  var xHeight = context.measureText('x').height\n  var capHeight = context.measureText('H').height\n  var metrics = context.measureText('Hxy')\n  var xStart = (w - metrics.width) / 2\n  context.fontFamily = fontName\n  context.fillStyle = '#FFAF00'\n  context.fillRect(\n    xStart,\n    h / 2 - metrics.ascent,\n    metrics.bounds.maxx - metrics.bounds.minx,\n    1 + metrics.bounds.maxy - metrics.bounds.miny\n  )\n  context.fillStyle = '#333333'\n  context.fillText(testText, xStart, h / 2)\n  metrics.fontSize = parseInt(metrics.fontSize)\n  metrics.offset = Math.ceil((metrics.leading - metrics.height) / 2)\n  metrics.capHeight = capHeight\n  metrics.xHeight = xHeight - 1\n  metrics.ascender = metrics.capHeight - metrics.xHeight\n  metrics.descender = metrics.descent\n\n  var myMetrics = {\n    px: JSON.parse(JSON.stringify(metrics)),\n    relative: {\n      fontsize: 1,\n      offset: metrics.offset / metrics.fontSize,\n      height: metrics.height / metrics.fontSize,\n      capHeight: metrics.capHeight / metrics.fontSize,\n      ascender: metrics.ascender / metrics.fontSize,\n      xHeight: metrics.xHeight / metrics.fontSize,\n      descender: metrics.descender / metrics.fontSize,\n    },\n  }\n\n  Array.prototype.slice\n    .call(document.getElementsByTagName('canvas'), 0)\n    .forEach(function(c, i) {\n      if (i > 0) document.body.removeChild(c)\n    })\n\n  // Restore CanvasRenderingContext2D, needed for reusing this function ...\n  CanvasRenderingContext2D.prototype.measureText =\n    CanvasRenderingContext2D.prototype.measureTextWidth\n  return myMetrics\n}\n","export default function displayMetrics(\n  myMetrics,\n  containerId = 'illustrationContainer',\n  logId = 'log'\n) {\n  document.getElementById(containerId).innerHTML = [\n    '<div style=\"margin:0; padding:0; position: relative; font-size:',\n    fontSize,\n    ';font-style:',\n    fontStyle,\n    ';font-weight:',\n    fontWeight,\n    ';line-height: 1em; outline:1px solid black;\">',\n    testText,\n    '<div class=\"__ascender\" style=\"position: absolute; width:100%; top:',\n    myMetrics.relative.offset,\n    'em; height:',\n    myMetrics.relative.ascender,\n    'em; background:rgba(220,0,5,.5);\"></div>',\n    '<div class=\"__xHeight\" style=\"position: absolute; width:100%; top:',\n    myMetrics.relative.offset + myMetrics.relative.ascender,\n    'em; height:',\n    myMetrics.relative.xHeight,\n    'em; background:rgba(149,204,13,.5);\"></div>',\n    '<div class=\"__xHeight\" style=\"position: absolute; width:100%; top:',\n    myMetrics.relative.offset +\n      myMetrics.relative.ascender +\n      myMetrics.relative.xHeight,\n    'em; height:',\n    myMetrics.relative.descender,\n    'em; background:rgba(13,126,204,.5);\"></div>',\n    '</div>',\n  ].join('')\n\n  document\n    .getElementById(containerId)\n    .setAttribute('style', 'font-family:' + fontName)\n\n  var logstring = ['var metrics =', JSON.stringify(myMetrics, null, '  ')].join(\n    ' '\n  )\n  document.getElementById(logId).textContent = logstring\n}\n","import measure from 'font-measure'\nimport measure2 from './measure2'\nimport displayMetrics from './displayMetrics'\n\nwindow.measure = measure\nwindow.measure2 = measure2\nwindow.displayMetrics = displayMetrics\n"]}